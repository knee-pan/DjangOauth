# Generated by Django 3.2.15 on 2022-09-29 09:11

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('machine', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Profile name must be unique', max_length=50, unique=True)),
                ('color', models.CharField(default='#ffffff', help_text='Profile color for resin', max_length=7, validators=[django.core.validators.MinLengthValidator(7)])),
                ('confirmed', models.BooleanField(default=False)),
                ('layer_thickness', models.PositiveSmallIntegerField(default=50, help_text='5 - 10000 micron', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(10000)])),
                ('xy_scale_factor', models.FloatField(default=1, help_text='-0.5 - 1.2', validators=[django.core.validators.MinValueValidator(-0.5), django.core.validators.MaxValueValidator(1.2)])),
                ('base_cure_time', models.PositiveIntegerField(default=9000, help_text='50 - 40000 ms', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(40000)])),
                ('base_wait_before_cure', models.PositiveSmallIntegerField(default=500, help_text='1 - 5000', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('base_wait_on_top', models.PositiveSmallIntegerField(default=100, help_text='25 - 5000', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(5000)])),
                ('base_wait_after_cure', models.PositiveSmallIntegerField(default=150, help_text='1 - 5000', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('base_light_ratio', models.FloatField(default=1, help_text='0.1 - 2.0', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2)])),
                ('base_layer_count', models.PositiveSmallIntegerField(default=10, help_text='1 - 100', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('base_z_speed', models.PositiveSmallIntegerField(default=3, help_text='1 - 9', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='Windows Base Z Speed')),
                ('advanced_base_z_speed', models.PositiveSmallIntegerField(default=310, help_text='150 - 2000', validators=[django.core.validators.MinValueValidator(150), django.core.validators.MaxValueValidator(2000)], verbose_name='Linux Base Z Speed')),
                ('base_z_speed_step_1', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Base Z Speed(Step 1)')),
                ('base_z_speed_step_2', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Base Z Speed(Step 2)')),
                ('base_z_peeling', models.FloatField(default=1.0, help_text='0.1 - 10.00', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10)], verbose_name='Windows / Linux Base Z Peeling')),
                ('base_z_peeling_step_1', models.FloatField(default=0.5, help_text='0.0025 - 10.00', validators=[django.core.validators.MinValueValidator(0.0025), django.core.validators.MaxValueValidator(10)], verbose_name='Base Peeling(Step 1)')),
                ('base_z_peeling_step_2', models.FloatField(default=0.5, help_text='0.0025 - 10.00', validators=[django.core.validators.MinValueValidator(0.0025), django.core.validators.MaxValueValidator(10)], verbose_name='Base Peeling(Step 2)')),
                ('cure_time', models.PositiveIntegerField(default=1200, help_text='50 - 20000', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(20000)])),
                ('wait_before_cure', models.PositiveSmallIntegerField(default=500, help_text='1 - 5000', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('wait_on_top', models.PositiveSmallIntegerField(default=100, help_text='25 - 5000', validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(5000)])),
                ('wait_after_cure', models.PositiveSmallIntegerField(default=150, help_text='1 - 5000', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('light_ratio', models.FloatField(default=1, help_text='0.1 - 2.0', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(2)])),
                ('z_speed', models.PositiveSmallIntegerField(default=3, help_text='1 - 9', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='Windows Z Speed')),
                ('advanced_z_speed', models.PositiveSmallIntegerField(default=310, help_text='150 - 50000', validators=[django.core.validators.MinValueValidator(150), django.core.validators.MaxValueValidator(50000)], verbose_name='Linux Z Speed')),
                ('z_peeling', models.FloatField(default=1, help_text='0.1 - 10.00', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10)], verbose_name='Peeling (For Linux Step 1)')),
                ('z_speed_up_step_1', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Z Speed Up (Step 1)')),
                ('z_speed_up_step_2', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Z Speed Up (Step 2)')),
                ('z_speed_down_step_1', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Z Speed Down (Step 1)')),
                ('z_speed_down_step_2', models.PositiveSmallIntegerField(default=310, help_text='120 - 20000', validators=[django.core.validators.MinValueValidator(120), django.core.validators.MaxValueValidator(20000)], verbose_name='Z Speed Down (Step 2)')),
                ('z_peeling_step_1', models.FloatField(default=0.5, help_text='0.0025 - 10.00', validators=[django.core.validators.MinValueValidator(0.0025), django.core.validators.MaxValueValidator(10)], verbose_name='Z Peeling (Step 1)')),
                ('z_peeling_step_2', models.FloatField(default=0.5, help_text='0.0025 - 10.00', validators=[django.core.validators.MinValueValidator(0.0025), django.core.validators.MaxValueValidator(10)], verbose_name='Z Peeling (Step 2)')),
                ('resin_temp', models.PositiveSmallIntegerField(default=36, help_text='20 - 80', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)], verbose_name='Resin Temp Min')),
                ('resin_temp_max', models.PositiveSmallIntegerField(default=37, help_text='20 - 80', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)], verbose_name='Resin Temp Max')),
                ('dimming_type', models.IntegerField(choices=[(0, 'Off'), (1, 'Checkerboard'), (2, 'Homogeneous')], default=0)),
                ('dimming_amount_percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('wall_around_dimming', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('skip_dimming_for_early_layers', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('machine_type', models.ManyToManyField(related_name='profiles', to='machine.MachineType')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
